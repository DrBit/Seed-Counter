///////////
Statuses
///////////

Stop: When has no pending action, meaning just finished a batch or never started before
Run: When its running automatically
Pause: When the machine needs user attention due to an error or to a pop up question, or when the user manually pauses the machine.
setting up: When arduino is setting everything up. Happens at the begining and after a shut down of the motors.

///////////
States
///////////
States are handled within the "send_action" "send_status" "send_error" "send_position" functions or ALSO within the function "check_pause" in Arduino

following variables are common for the main program:
(byte)global_status - contains the actual picked status
(byte)previous_status - contains the previous status in case we are in pause status

Example of commands sended:
1A6	(action)
1S20	(Status)
1G56	(Goto position)  <-- Eliminated
1E2	(Error)

for a list of all possible comands check file list_commands_ethernet.h

///////////
NETWORK
///////////
Network functions are in file Ethernet_module.pde
Basic functions are: 
setup_network() - sets up the network module to start receiving information (IP,MAC,SERVER_IP, SERVER PORT)
connect_to_server() - Opens a telnet connection to the previous set server
check_server() - check server from incomming commands and also sends the cued commands (if any), also connects to server if necessary (connect_to_server())


////////////
Sending commands
////////////
1P*

first number is always the machine ID from where the messages are sended
then the command tipe: 

P for get positions from server (returns the data position of specific position numbers)
G (go-to) informs server that we are going to a defined position. 
S for Statuses
A for actions
E for errors
I for info
I1 means blister mode (Two tipes 1 for 10seeds per blister or 2 for 5 seeds per blister)

////////////
Receiving commands
////////////

X it is actualli not needed to start a reception of data from the server
you can directly send commands to arduino and it will receive them acordingly

for now acepted commands are:
P-number (to send changed positions)
!!! needs to be followed with 4 numbers line feeded or return after each one.(OK at the end if nothing elses is expected)

I-command (to submit information...)
DATA needs to follow one only number for the selected command


EXAMPLE of data arduino can receive:

(updating Positions 3 and 4)
P3
123
234
456
678
P4
346
623
123
3
OK

as observerd there is no need for an X at the begining of the transmit as arduino will be looking for predefined letters (P or I at the moment, and OK for ending)
arduino check periodically if new data is received.
Arduino will stop receiving if an OK is sended or if there is no more data being sended (in last case will report an error as OK is missing)


/////////////////
receiving information Autoreset
/////////////////

An autoreset is issued when a certain number of blisters have been processed. It is still not clear why the X axis loses trak of the steps but the most possible explanation
is a bug inside the functions that counts steps + accelerates and deacelerates. 

When issuing and autoreset all counters are reseted and any error in the steps is deleted. Differing from a normal reset in the autoreset no statuses or actions are sended to the server so the server can keep all current information on the batch being processed and continue without the need of any user input.

for receiving the information of autoreset we will be expecting 2 values: autoreset_state (I2) and autoreset_value (I3)

autoreset_state (I2) should be followed by 0 (disabled) or 1 (enabled)
autoreset_value (I3) should be followed by a number between 1 and 100.

Example of received autoreset information in machine side:

I2
1
I3
25
OK

this means:
I2 (autoreset_state) is value:0 so means it is enabled
I3 (autoreset_value) is value 25 so means an autoresset will be issued after 25 blisters.

if I2 is not defined the software will use the default value that I've set to 0 (disabled)
if I3 is not defined the software will use the default value that I've set to 30.

information should be sended befor the begining of the batch. But information sended at any time shoul also work and will take effect inmediatelly.

